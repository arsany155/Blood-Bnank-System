@model BD_26.Models.Donor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/User_Layout.cshtml";
}
<div class="signup">
    <div class="container">
        <nav class="pt-4" aria-label="breadcrumb">
            <ol class="breadcrumb breadcrumb-edit">
                <li class="breadcrumb-item"><a href="index-en.html">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Sign up</li>
            </ol>
        </nav>
        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Satus))
        {
            if (ViewBag.Message != null)
            {
                <div class="alert-danger">
                    <strong>Error!</strong>@ViewBag.Message
                </div>

            }

        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.DSsn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DSsn, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = "[0-9]{14}" } })
                            @Html.ValidationMessageFor(model => model.DSsn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("country", new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "Alexandria", Value = "Alexandria", Selected=true}})
                            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("city", new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "First Monatza", Value = "First Monatza", Selected=true},
                                        new SelectListItem { Text = "Second Monatza", Value = "Second Monatza"},
                                        new SelectListItem { Text = "West", Value = "West"},
                                        new SelectListItem { Text = "Middle", Value = "Middle"},
                                        new SelectListItem { Text = "East", Value = "East"},
                                        new SelectListItem { Text = "Gomrok", Value = "Gomrok"},
                                        new SelectListItem { Text = "Agamy", Value = "Agamy"},
                                        new SelectListItem { Text = "Amreya", Value = "Amreya"},
                                        new SelectListItem { Text = "Amreya second", Value = "Amreya second"},
                                        new SelectListItem { Text = "Borg El Arab", Value = "Borg El Arab"}}, "Select District")
                                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                                </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.sex, new SelectList(Enum.GetValues(typeof(sex))), "Select Gender")
                            @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.birthday, "required", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control",@pattern="^01[0-2,5]{1}[0-9]{8}$" ,@type="tel", required = "required" } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.bloodtype, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("bloodtype", new List<SelectListItem>
                            {
                                new SelectListItem { Text = "A-", Value = "A-", Selected=true},
                                new SelectListItem { Text = "AB-", Value = "AB-"},
                                new SelectListItem { Text = "O-", Value = "O-"},
                                new SelectListItem { Text = "B-", Value = "B-"},
                                new SelectListItem { Text = "A+", Value = "A+"},
                                new SelectListItem { Text = "AB+", Value = "AB+"},
                                new SelectListItem { Text = "O+", Value = "O+"},
                                new SelectListItem { Text = "B+", Value = "B+"}}, "Select Blood type")
                            @Html.ValidationMessageFor(model => model.bloodtype, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="text-center">
                                <a href="" class="btn btn-primary"><input type="submit" value="Create" class="btn btn-default" /></a>
                            </div>

                        </div>
                    </div>
                </div>

                if (ViewBag.Message != null)
                {
                   <div class="alert-success">
                     @ViewBag.Message
                   </div>
                }
                
            }
        }

    </div>
</div>