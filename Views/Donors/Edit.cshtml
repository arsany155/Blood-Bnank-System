@model BD_26.Models.Donor

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/User_Layout.cshtml";
}

<div class="signup">
    <div class="container">
        <nav class="pt-4" aria-label="breadcrumb">
            <ol class="breadcrumb breadcrumb-edit">
                <li class="breadcrumb-item"><a href="index-en.html">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="index-en.html">Donors</a></li>
                <li class="breadcrumb-item active" aria-current="page">Edit</li>
            </ol>
        </nav>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
    
            <div class="form-horizontal">
       
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.DSsn)

                <div class="form-group">
                    @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Label("country", "Egypt")
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="col-md-10">
                            @Html.DropDownList("city", new List<SelectListItem>
                            {
                                new SelectListItem { Text = "First Monatza", Value = "First Monatza", Selected=true},
                                new SelectListItem { Text = "Second Monatza", Value = "Second Monatza"},
                                new SelectListItem { Text = "West", Value = "West"},
                                new SelectListItem { Text = "Middle", Value = "Middle"},
                                new SelectListItem { Text = "East", Value = "East"},
                                new SelectListItem { Text = "Gomrok", Value = "Gomrok"},
                                new SelectListItem { Text = "Agamy", Value = "Agamy"},
                                new SelectListItem { Text = "Amreya", Value = "Amreya"},
                                new SelectListItem { Text = "Amreya second", Value = "Amreya second"},
                                new SelectListItem { Text = "Borg El Arab", Value = "Borg El Arab"}}, "Select District")
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.sex, new SelectList(Enum.GetValues(typeof(sex))), "Select Gender")
                        @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.bloodtype, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("bloodtype", new List<SelectListItem>
                        {
                            new SelectListItem { Text = "A-", Value = "A-", Selected=true},
                            new SelectListItem { Text = "AB-", Value = "AB-"},
                            new SelectListItem { Text = "O-", Value = "O-"},
                            new SelectListItem { Text = "B-", Value = "B-"},
                            new SelectListItem { Text = "A+", Value = "A+"},
                            new SelectListItem { Text = "AB+", Value = "AB+"},
                            new SelectListItem { Text = "O+", Value = "O+"},
                            new SelectListItem { Text = "B+", Value = "B+"}}, "Select Blood type")
                        @Html.ValidationMessageFor(model => model.bloodtype, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsEmailVerify, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsEmailVerify)
                            @Html.ValidationMessageFor(model => model.IsEmailVerify, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ActivationCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ActivationCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ActivationCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>